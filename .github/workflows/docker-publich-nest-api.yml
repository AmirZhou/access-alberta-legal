# .github/workflows/docker-publish-acl-api.yml
name: Build, Test, and Push acl-api Docker Image

on:
  push:
    branches: [main]
    paths:
      - 'apps/acl-api/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-test-push-api:
    runs-on: ubuntu-latest

    # Grant permissions for GITHUB_TOKEN to push to GHCR
    permissions:
      contents: read # Needed to checkout the code
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Verify pnpm lockfile
        run: pnpm install --frozen-lockfile --dry-run

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. Extract metadata (like tags and labels) for the Docker image
      #    This helps create meaningful tags automatically
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/acl-api
          tags: |
            type=sha 
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build the API Docker image and LOAD it locally
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true # Load the image into the runner's local Docker daemon
          file: ./apps/acl-api/Dockerfile
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by the 'meta' step
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push Docker image
        run: |
          echo "Pushing tags: ${{ steps.meta.outputs.tags }}"
          docker push --all-tags ghcr.io/amirzhou/acl-api
